<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aaa.dao.PayDao">

    <resultMap type="com.aaa.entity.Pay" id="PayMap">
        <result property="payid" column="payid" jdbcType="INTEGER"/>
        <result property="registerid" column="registerid" jdbcType="INTEGER"/>
        <result property="money" column="money" jdbcType="VARCHAR"/>
        <result property="paydate" column="payDate" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="PayMap">
        select
          payid, registerid, money, payDate
        from pay
        where payid = #{payid}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="PayMap">
        select
          payid, registerid, money, payDate
        from pay
        <where>
            <if test="payid != null">
                and payid = #{payid}
            </if>
            <if test="registerid != null">
                and registerid = #{registerid}
            </if>
            <if test="money != null">
                and money = #{money}
            </if>
            <if test="paydate != null">
                and payDate = #{paydate}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from pay
        <where>
            <if test="payid != null">
                and payid = #{payid}
            </if>
            <if test="registerid != null">
                and registerid = #{registerid}
            </if>
            <if test="money != null">
                and money = #{money}
            </if>
            <if test="paydate != null">
                and payDate = #{paydate}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="payid" useGeneratedKeys="true">
        insert into pay(registerid, money, payDate)
        values (#{registerid}, #{money}, #{paydate})
    </insert>

    <insert id="insertBatch" keyProperty="payid" useGeneratedKeys="true">
        insert into pay(registerid, money, payDate)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.registerid}, #{entity.money}, #{entity.paydate})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="payid" useGeneratedKeys="true">
        insert into pay(registerid, money, payDate)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.registerid}, #{entity.money}, #{entity.paydate})
        </foreach>
        on duplicate key update
        registerid = values(registerid),
        money = values(money),
        payDate = values(payDate)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update pay
        <set>
            <if test="registerid != null">
                registerid = #{registerid},
            </if>
            <if test="money != null">
                money = #{money},
            </if>
            <if test="paydate != null">
                payDate = #{paydate},
            </if>
        </set>
        where payid = #{payid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from pay where payid = #{payid}
    </delete>

</mapper>

