<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace=".dao.DoctorDao">

    <resultMap type=".entity.Doctor" id="DoctorMap">
        <result property="doctorid" column="doctorId" jdbcType="INTEGER"/>
        <result property="doctorname" column="doctorName" jdbcType="VARCHAR"/>
        <result property="dstate" column="dstate" jdbcType="INTEGER"/>
        <result property="amstarttime" column="amStartTime" jdbcType="VARCHAR"/>
        <result property="amendtime" column="amEndTime" jdbcType="VARCHAR"/>
        <result property="pmstarttime" column="pmStartTime" jdbcType="VARCHAR"/>
        <result property="pmendtime" column="pmEndTime" jdbcType="VARCHAR"/>
        <association property="departmentid" javaType="com.aaa.entity.Deparment">
            <result property="id" column="departmentId" jdbcType="INTEGER"/>
        </association>
        <association property="registeredid" javaType="com.aaa.entity.Registeredtype">
            <result property="registeredid" column="registeredId" jdbcType="INTEGER"/>
        </association>
    </resultMap>

    <!--
    int addDoctor(Doctor doctor);
    int deleteDoctor(int id);
    查询单个-->
    <insert id="addDoctor" keyProperty="doctorid" useGeneratedKeys="true">
        insert into doctor(doctorName, departmentId, registeredId, dstate)
        values (#{doctorname}, #{departmentid}, #{registeredid}, #{dstate})
    </insert>

    <select id="queryById" resultMap="DoctorMap">
        select
          doctorId, doctorName, departmentId, registeredId,
        from doctor
        <where>
            <if test="doctorId != null">
                doctorId = #{doctorid}
            </if>
            <if test="doctorname != null">
                doctorName like count('%', count(#{doctorname},'%'))
            </if>
        </where>
    </select>



    <!--通过主键删除-->
    <delete id="deleteDoctor">
        delete from doctor where doctorId = #{id}
    </delete>

</mapper>

